#!/bin/zsh

fancy_echo() {
  local fmt="$1"; shift

  printf "\n$fmt\n" "$@"
}

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}


trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'

HOMEBREW_PREFIX="/usr/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

case "$SHELL" in
  */zsh) : ;;
  *)
    fancy_echo "Changing your shell to zsh ..."
      chsh -s "$(which zsh)"
    ;;
esac

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    fancy_echo "Updating %s ..." "$1"
    gem update "$@"
  else
    fancy_echo "Installing %s ..." "$1"
    gem install "$@" --no-document
  fi
}

pip_install_or_update() {
  local package = "$1"
  if pip_is_installed $package > /dev/null; then
    fancy_echo "Updating %s ..." "$package"
    pip install --upgrade $package
  else
    fancy_echo "Installing %s ..." "$package"
    pip install $package
  fi
}

pip_is_installed() {
  pip list | grep "$1"
}

find_latest_ruby() {
  rbenv install -l | grep -v - | tail -1 | sed -e 's/^ *//'
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_zshrc '# recommended by brew doctor'
    append_to_zshrc 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
brew update
brew tap Homebrew/bundle

brew bundle ./Brewfile

if ! cat /etc/shells | grep -Fq fish; then
  fancy_echo "Adding fish to /etc/shells"
  echo "/usr/local/bin/fish" | sudo tee -a /etc/shells
fi

if ! command -v antibody >/dev/null; then
  curl -s https://raw.githubusercontent.com/getantibody/installer/master/install | bash -s
fi

fancy_echo "Checking for SSH key, generating one if it doesn't exist ..."
  [[ -f ~/.ssh/id_rsa.pub ]] || ssh-keygen -t rsa -b 4096 -a 100 -C "nano@fdp.io"
  ssh-add ~/.ssh/id_rsa
  pbcopy < ~/.ssh/id_rsa.pub

ruby_version="$(find_latest_ruby)"

if ! ruby -v | grep -Fq "ruby $ruby_version"; then
  rbenv install -s $ruby_version
  echo $ruby_version > ~/.ruby-version
  append_to_zshrc 'if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi'
fi

if which rbenv > /dev/null; then
  eval "$(rbenv init -)";
fi

rbenv global $ruby_version

gem update --system
gem_install_or_update 'bundler'
gem_install_or_update 'cocoapods'
gem_install_or_update 'xcversion'

if [ ! -d "$HOME/.dotfiles/" ]; then
  git clone git@github.com:NanoXD/dotfiles.git ~/.dotfiles
  rcup -x apps
fi

if [ ! -e "$HOME/.tmux" ]; then
  mkdir -p $HOME/.tmux
  git clone git@github.com:tmux-plugins/tmux-sessionist.git ~/.tmux/sessionist
fi

pip_install_or_update 'diff-highlight'
pip_install_or_update 'neovim'

